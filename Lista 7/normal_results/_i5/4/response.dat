HTTP/1.1 500 Internal Server Error
Date: Sat, 01 Dec 2018 10:28:01 GMT
Server: WSGIServer/0.2 CPython/3.5.3
Content-Length: 159179
Content-Type: text/html
X-Frame-Options: SAMEORIGIN
Vary: Cookie

<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>NoReverseMatch
          at /transfers/history</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; background-color:#fff; color:#000; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.frame { padding-bottom:1em; color:#666; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#505050; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands { margin-left: 40px; }
    div.commands a { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em;}
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #666; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
  </style>
  
  <script type="text/javascript">
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('table.vars'));
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.textContent = s.textContent == uarr ? darr : uarr;
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<div id="summary">
  <h1>NoReverseMatch
       at /transfers/history</h1>
  <pre class="exception_value">Reverse for &#39;login&#39; not found. &#39;login&#39; is not a valid view function or pattern name.</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>GET</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://127.0.0.1:8000/transfers/history</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>2.1.3</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>NoReverseMatch</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>Reverse for &#39;login&#39; not found. &#39;login&#39; is not a valid view function or pattern name.</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td>/home/parallels/.local/lib/python3.5/site-packages/django/urls/resolvers.py in _reverse_with_prefix, line 622</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/usr/bin/python3</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.5.3</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#39;/home/parallels/.local/share/Trash/files/Banking&#39;,
 &#39;/usr/lib/python35.zip&#39;,
 &#39;/usr/lib/python3.5&#39;,
 &#39;/usr/lib/python3.5/plat-x86_64-linux-gnu&#39;,
 &#39;/usr/lib/python3.5/lib-dynload&#39;,
 &#39;/home/parallels/.local/lib/python3.5/site-packages&#39;,
 &#39;/usr/local/lib/python3.5/dist-packages&#39;,
 &#39;/usr/lib/python3/dist-packages&#39;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>So, 1 Gru 2018 11:28:01 +0100</td>
    </tr>
  </table>
</div>



<div id="template">
   <h2>Error during template rendering</h2>
   <p>In template <code>/home/parallels/.local/share/Trash/files/Banking/onlinebank/templates/onlinebank/base.html</code>, error at line <strong>0</strong></p>
   <h3>Reverse for &#39;login&#39; not found. &#39;login&#39; is not a valid view function or pattern name.</h3>
   <table class="source cut-top
       cut-bottom">
   
   
      <tr><th>1</th>
      <td>{% load static %}
</td></tr>
   
   
   
      <tr><th>2</th>
      <td>
</td></tr>
   
   
   
      <tr><th>3</th>
      <td>&lt;!DOCTYPE html&gt; 
</td></tr>
   
   
   
      <tr><th>4</th>
      <td>&lt;html lang=&quot;pl&quot;&gt; 
</td></tr>
   
   
   
      <tr><th>5</th>
      <td>&lt;head&gt;  
</td></tr>
   
   
   
      <tr><th>6</th>
      <td>    &lt;meta charset=&quot;utf-8&quot;&gt; 
</td></tr>
   
   
   
      <tr><th>7</th>
      <td>    &lt;title&gt;Jeleniogórska Zachodnia Grupa Kredytowa&lt;/title&gt; 
</td></tr>
   
   
   
      <tr><th>8</th>
      <td>    &lt;meta name=&quot;description&quot; content=&quot;My Journey Through Computer Science&quot;&gt;
</td></tr>
   
   
   
      <tr><th>9</th>
      <td>    &lt;meta name=&quot;author&quot; content=&quot;Paweł Narolski&quot;&gt;
</td></tr>
   
   
   
      <tr><th>10</th>
      <td>    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;/&gt;
</td></tr>
   
   
   </table>
</div>


<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>

          
            <div class="context" id="c140270080809736">
              
                <ol start="27" class="pre-context" id="pre140270080809736">
                
                  <li onclick="toggle('pre140270080809736', 'post140270080809736')"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>
                
                  <li onclick="toggle('pre140270080809736', 'post140270080809736')"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>
                
                  <li onclick="toggle('pre140270080809736', 'post140270080809736')"><pre>    can rely on getting a response instead of an exception.</pre></li>
                
                  <li onclick="toggle('pre140270080809736', 'post140270080809736')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140270080809736', 'post140270080809736')"><pre>    @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre140270080809736', 'post140270080809736')"><pre>    def inner(request):</pre></li>
                
                  <li onclick="toggle('pre140270080809736', 'post140270080809736')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="34" class="context-line">
                <li onclick="toggle('pre140270080809736', 'post140270080809736')"><pre>            response = get_response(request)</pre> <span>...</span></li>
              </ol>
              
                <ol start='35' class="post-context" id="post140270080809736">
                  
                  <li onclick="toggle('pre140270080809736', 'post140270080809736')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140270080809736', 'post140270080809736')"><pre>            response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre140270080809736', 'post140270080809736')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre140270080809736', 'post140270080809736')"><pre>    return inner</pre></li>
                  
                  <li onclick="toggle('pre140270080809736', 'post140270080809736')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080809736', 'post140270080809736')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270080809736')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270080809736">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>NoReverseMatch(&quot;Reverse for &#39;login&#39; not found. &#39;login&#39; is not a valid view function or pattern name.&quot;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f932ec26630&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/transfers/history&#39;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/core/handlers/base.py</code> in <code>_get_response</code>

          
            <div class="context" id="c140270080809288">
              
                <ol start="119" class="pre-context" id="pre140270080809288">
                
                  <li onclick="toggle('pre140270080809288', 'post140270080809288')"><pre>                break</pre></li>
                
                  <li onclick="toggle('pre140270080809288', 'post140270080809288')"><pre></pre></li>
                
                  <li onclick="toggle('pre140270080809288', 'post140270080809288')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140270080809288', 'post140270080809288')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140270080809288', 'post140270080809288')"><pre>            try:</pre></li>
                
                  <li onclick="toggle('pre140270080809288', 'post140270080809288')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre140270080809288', 'post140270080809288')"><pre>            except Exception as e:</pre></li>
                
                </ol>
              
              <ol start="126" class="context-line">
                <li onclick="toggle('pre140270080809288', 'post140270080809288')"><pre>                response = self.process_exception_by_middleware(e, request)</pre> <span>...</span></li>
              </ol>
              
                <ol start='127' class="post-context" id="post140270080809288">
                  
                  <li onclick="toggle('pre140270080809288', 'post140270080809288')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080809288', 'post140270080809288')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre140270080809288', 'post140270080809288')"><pre>        if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140270080809288', 'post140270080809288')"><pre>            if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
                  <li onclick="toggle('pre140270080809288', 'post140270080809288')"><pre>                view_name = callback.__name__</pre></li>
                  
                  <li onclick="toggle('pre140270080809288', 'post140270080809288')"><pre>            else:                                           # CBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270080809288')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270080809288">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function history at 0x7f932dbd1400&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7f93313d7d68&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/transfers/history&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;URLResolver &#39;banking.urls&#39; (None:None) &#39;^/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=onlinebank.views.history, args=(), kwargs={}, url_name=history, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f932ec26630&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function history at 0x7f932dbd1400&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/core/handlers/base.py</code> in <code>_get_response</code>

          
            <div class="context" id="c140270080807048">
              
                <ol start="117" class="pre-context" id="pre140270080807048">
                
                  <li onclick="toggle('pre140270080807048', 'post140270080807048')"><pre>            response = middleware_method(request, callback, callback_args, callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre140270080807048', 'post140270080807048')"><pre>            if response:</pre></li>
                
                  <li onclick="toggle('pre140270080807048', 'post140270080807048')"><pre>                break</pre></li>
                
                  <li onclick="toggle('pre140270080807048', 'post140270080807048')"><pre></pre></li>
                
                  <li onclick="toggle('pre140270080807048', 'post140270080807048')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140270080807048', 'post140270080807048')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140270080807048', 'post140270080807048')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="124" class="context-line">
                <li onclick="toggle('pre140270080807048', 'post140270080807048')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>...</span></li>
              </ol>
              
                <ol start='125' class="post-context" id="post140270080807048">
                  
                  <li onclick="toggle('pre140270080807048', 'post140270080807048')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140270080807048', 'post140270080807048')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre140270080807048', 'post140270080807048')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080807048', 'post140270080807048')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre140270080807048', 'post140270080807048')"><pre>        if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140270080807048', 'post140270080807048')"><pre>            if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270080807048')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270080807048">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function history at 0x7f932dbd1400&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7f93313d7d68&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/transfers/history&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;URLResolver &#39;banking.urls&#39; (None:None) &#39;^/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=onlinebank.views.history, args=(), kwargs={}, url_name=history, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f932ec26630&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function history at 0x7f932dbd1400&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/parallels/.local/share/Trash/files/Banking/onlinebank/views.py</code> in <code>history</code>

          
            <div class="context" id="c140270080807432">
              
                <ol start="43" class="pre-context" id="pre140270080807432">
                
                  <li onclick="toggle('pre140270080807432', 'post140270080807432')"><pre>        &#39;amount&#39;: transfer_request.amount,</pre></li>
                
                  <li onclick="toggle('pre140270080807432', 'post140270080807432')"><pre>    }</pre></li>
                
                  <li onclick="toggle('pre140270080807432', 'post140270080807432')"><pre></pre></li>
                
                  <li onclick="toggle('pre140270080807432', 'post140270080807432')"><pre>    return render(request, &#39;onlinebank/confirm_transfer.html&#39;, context)</pre></li>
                
                  <li onclick="toggle('pre140270080807432', 'post140270080807432')"><pre></pre></li>
                
                  <li onclick="toggle('pre140270080807432', 'post140270080807432')"><pre>def history(request):</pre></li>
                
                  <li onclick="toggle('pre140270080807432', 'post140270080807432')"><pre>    transfers = [_ for _ in models.Transfer.objects.all() if _.from_account == request.user]</pre></li>
                
                </ol>
              
              <ol start="50" class="context-line">
                <li onclick="toggle('pre140270080807432', 'post140270080807432')"><pre>    return render(request, &#39;onlinebank/history.html&#39;, {&#39;transfers&#39;: transfers})</pre> <span>...</span></li>
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270080807432')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270080807432">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/transfers/history&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>transfers</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/shortcuts.py</code> in <code>render</code>

          
            <div class="context" id="c140270080809352">
              
                <ol start="29" class="pre-context" id="pre140270080809352">
                
                  <li onclick="toggle('pre140270080809352', 'post140270080809352')"><pre></pre></li>
                
                  <li onclick="toggle('pre140270080809352', 'post140270080809352')"><pre></pre></li>
                
                  <li onclick="toggle('pre140270080809352', 'post140270080809352')"><pre>def render(request, template_name, context=None, content_type=None, status=None, using=None):</pre></li>
                
                  <li onclick="toggle('pre140270080809352', 'post140270080809352')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140270080809352', 'post140270080809352')"><pre>    Return a HttpResponse whose content is filled with the result of calling</pre></li>
                
                  <li onclick="toggle('pre140270080809352', 'post140270080809352')"><pre>    django.template.loader.render_to_string() with the passed arguments.</pre></li>
                
                  <li onclick="toggle('pre140270080809352', 'post140270080809352')"><pre>    &quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="36" class="context-line">
                <li onclick="toggle('pre140270080809352', 'post140270080809352')"><pre>    content = loader.render_to_string(template_name, context, request, using=using)</pre> <span>...</span></li>
              </ol>
              
                <ol start='37' class="post-context" id="post140270080809352">
                  
                  <li onclick="toggle('pre140270080809352', 'post140270080809352')"><pre>    return HttpResponse(content, content_type, status)</pre></li>
                  
                  <li onclick="toggle('pre140270080809352', 'post140270080809352')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080809352', 'post140270080809352')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080809352', 'post140270080809352')"><pre>def redirect(to, *args, permanent=False, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140270080809352', 'post140270080809352')"><pre>    &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140270080809352', 'post140270080809352')"><pre>    Return an HttpResponseRedirect to the appropriate URL for the arguments</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270080809352')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270080809352">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>content_type</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#39;transfers&#39;: []}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/transfers/history&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>status</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>template_name</td>
                    <td class="code"><pre>&#39;onlinebank/history.html&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/template/loader.py</code> in <code>render_to_string</code>

          
            <div class="context" id="c140270080810056">
              
                <ol start="55" class="pre-context" id="pre140270080810056">
                
                  <li onclick="toggle('pre140270080810056', 'post140270080810056')"><pre></pre></li>
                
                  <li onclick="toggle('pre140270080810056', 'post140270080810056')"><pre>    template_name may be a string or a list of strings.</pre></li>
                
                  <li onclick="toggle('pre140270080810056', 'post140270080810056')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140270080810056', 'post140270080810056')"><pre>    if isinstance(template_name, (list, tuple)):</pre></li>
                
                  <li onclick="toggle('pre140270080810056', 'post140270080810056')"><pre>        template = select_template(template_name, using=using)</pre></li>
                
                  <li onclick="toggle('pre140270080810056', 'post140270080810056')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre140270080810056', 'post140270080810056')"><pre>        template = get_template(template_name, using=using)</pre></li>
                
                </ol>
              
              <ol start="62" class="context-line">
                <li onclick="toggle('pre140270080810056', 'post140270080810056')"><pre>    return template.render(context, request)</pre> <span>...</span></li>
              </ol>
              
                <ol start='63' class="post-context" id="post140270080810056">
                  
                  <li onclick="toggle('pre140270080810056', 'post140270080810056')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080810056', 'post140270080810056')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080810056', 'post140270080810056')"><pre>def _engine_list(using=None):</pre></li>
                  
                  <li onclick="toggle('pre140270080810056', 'post140270080810056')"><pre>    return engines.all() if using is None else [engines[using]]</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270080810056')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270080810056">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#39;transfers&#39;: []}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/transfers/history&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>template</td>
                    <td class="code"><pre>&lt;django.template.backends.django.Template object at 0x7f932dbb4358&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>template_name</td>
                    <td class="code"><pre>&#39;onlinebank/history.html&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/template/backends/django.py</code> in <code>render</code>

          
            <div class="context" id="c140270080810824">
              
                <ol start="54" class="pre-context" id="pre140270080810824">
                
                  <li onclick="toggle('pre140270080810824', 'post140270080810824')"><pre>    @property</pre></li>
                
                  <li onclick="toggle('pre140270080810824', 'post140270080810824')"><pre>    def origin(self):</pre></li>
                
                  <li onclick="toggle('pre140270080810824', 'post140270080810824')"><pre>        return self.template.origin</pre></li>
                
                  <li onclick="toggle('pre140270080810824', 'post140270080810824')"><pre></pre></li>
                
                  <li onclick="toggle('pre140270080810824', 'post140270080810824')"><pre>    def render(self, context=None, request=None):</pre></li>
                
                  <li onclick="toggle('pre140270080810824', 'post140270080810824')"><pre>        context = make_context(context, request, autoescape=self.backend.engine.autoescape)</pre></li>
                
                  <li onclick="toggle('pre140270080810824', 'post140270080810824')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="61" class="context-line">
                <li onclick="toggle('pre140270080810824', 'post140270080810824')"><pre>            return self.template.render(context)</pre> <span>...</span></li>
              </ol>
              
                <ol start='62' class="post-context" id="post140270080810824">
                  
                  <li onclick="toggle('pre140270080810824', 'post140270080810824')"><pre>        except TemplateDoesNotExist as exc:</pre></li>
                  
                  <li onclick="toggle('pre140270080810824', 'post140270080810824')"><pre>            reraise(exc, self.backend)</pre></li>
                  
                  <li onclick="toggle('pre140270080810824', 'post140270080810824')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080810824', 'post140270080810824')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080810824', 'post140270080810824')"><pre>def copy_exception(exc, backend=None):</pre></li>
                  
                  <li onclick="toggle('pre140270080810824', 'post140270080810824')"><pre>    &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270080810824')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270080810824">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>[{&#39;None&#39;: None, &#39;False&#39;: False, &#39;True&#39;: True}, {}, {}, {&#39;transfers&#39;: []}]</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#39;/transfers/history&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.template.backends.django.Template object at 0x7f932dbb4358&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py</code> in <code>render</code>

          
            <div class="context" id="c140270080807944">
              
                <ol start="164" class="pre-context" id="pre140270080807944">
                
                  <li onclick="toggle('pre140270080807944', 'post140270080807944')"><pre></pre></li>
                
                  <li onclick="toggle('pre140270080807944', 'post140270080807944')"><pre>    def render(self, context):</pre></li>
                
                  <li onclick="toggle('pre140270080807944', 'post140270080807944')"><pre>        &quot;Display stage -- can be called many times&quot;</pre></li>
                
                  <li onclick="toggle('pre140270080807944', 'post140270080807944')"><pre>        with context.render_context.push_state(self):</pre></li>
                
                  <li onclick="toggle('pre140270080807944', 'post140270080807944')"><pre>            if context.template is None:</pre></li>
                
                  <li onclick="toggle('pre140270080807944', 'post140270080807944')"><pre>                with context.bind_template(self):</pre></li>
                
                  <li onclick="toggle('pre140270080807944', 'post140270080807944')"><pre>                    context.template_name = self.name</pre></li>
                
                </ol>
              
              <ol start="171" class="context-line">
                <li onclick="toggle('pre140270080807944', 'post140270080807944')"><pre>                    return self._render(context)</pre> <span>...</span></li>
              </ol>
              
                <ol start='172' class="post-context" id="post140270080807944">
                  
                  <li onclick="toggle('pre140270080807944', 'post140270080807944')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre140270080807944', 'post140270080807944')"><pre>                return self._render(context)</pre></li>
                  
                  <li onclick="toggle('pre140270080807944', 'post140270080807944')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080807944', 'post140270080807944')"><pre>    def compile_nodelist(self):</pre></li>
                  
                  <li onclick="toggle('pre140270080807944', 'post140270080807944')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140270080807944', 'post140270080807944')"><pre>        Parse and compile the template source into a nodelist. If debug</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270080807944')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270080807944">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>[{&#39;None&#39;: None, &#39;False&#39;: False, &#39;True&#39;: True}, {}, {}, {&#39;transfers&#39;: []}]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.template.base.Template object at 0x7f932cda72e8&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py</code> in <code>_render</code>

          
            <div class="context" id="c140270080807752">
              
                <ol start="156" class="pre-context" id="pre140270080807752">
                
                  <li onclick="toggle('pre140270080807752', 'post140270080807752')"><pre>        self.nodelist = self.compile_nodelist()</pre></li>
                
                  <li onclick="toggle('pre140270080807752', 'post140270080807752')"><pre></pre></li>
                
                  <li onclick="toggle('pre140270080807752', 'post140270080807752')"><pre>    def __iter__(self):</pre></li>
                
                  <li onclick="toggle('pre140270080807752', 'post140270080807752')"><pre>        for node in self.nodelist:</pre></li>
                
                  <li onclick="toggle('pre140270080807752', 'post140270080807752')"><pre>            yield from node</pre></li>
                
                  <li onclick="toggle('pre140270080807752', 'post140270080807752')"><pre></pre></li>
                
                  <li onclick="toggle('pre140270080807752', 'post140270080807752')"><pre>    def _render(self, context):</pre></li>
                
                </ol>
              
              <ol start="163" class="context-line">
                <li onclick="toggle('pre140270080807752', 'post140270080807752')"><pre>        return self.nodelist.render(context)</pre> <span>...</span></li>
              </ol>
              
                <ol start='164' class="post-context" id="post140270080807752">
                  
                  <li onclick="toggle('pre140270080807752', 'post140270080807752')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080807752', 'post140270080807752')"><pre>    def render(self, context):</pre></li>
                  
                  <li onclick="toggle('pre140270080807752', 'post140270080807752')"><pre>        &quot;Display stage -- can be called many times&quot;</pre></li>
                  
                  <li onclick="toggle('pre140270080807752', 'post140270080807752')"><pre>        with context.render_context.push_state(self):</pre></li>
                  
                  <li onclick="toggle('pre140270080807752', 'post140270080807752')"><pre>            if context.template is None:</pre></li>
                  
                  <li onclick="toggle('pre140270080807752', 'post140270080807752')"><pre>                with context.bind_template(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270080807752')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270080807752">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>[{&#39;None&#39;: None, &#39;False&#39;: False, &#39;True&#39;: True}, {}, {}, {&#39;transfers&#39;: []}]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.template.base.Template object at 0x7f932cda72e8&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py</code> in <code>render</code>

          
            <div class="context" id="c140270080808200">
              
                <ol start="930" class="pre-context" id="pre140270080808200">
                
                  <li onclick="toggle('pre140270080808200', 'post140270080808200')"><pre>    # extend_nodelist().</pre></li>
                
                  <li onclick="toggle('pre140270080808200', 'post140270080808200')"><pre>    contains_nontext = False</pre></li>
                
                  <li onclick="toggle('pre140270080808200', 'post140270080808200')"><pre></pre></li>
                
                  <li onclick="toggle('pre140270080808200', 'post140270080808200')"><pre>    def render(self, context):</pre></li>
                
                  <li onclick="toggle('pre140270080808200', 'post140270080808200')"><pre>        bits = []</pre></li>
                
                  <li onclick="toggle('pre140270080808200', 'post140270080808200')"><pre>        for node in self:</pre></li>
                
                  <li onclick="toggle('pre140270080808200', 'post140270080808200')"><pre>            if isinstance(node, Node):</pre></li>
                
                </ol>
              
              <ol start="937" class="context-line">
                <li onclick="toggle('pre140270080808200', 'post140270080808200')"><pre>                bit = node.render_annotated(context)</pre> <span>...</span></li>
              </ol>
              
                <ol start='938' class="post-context" id="post140270080808200">
                  
                  <li onclick="toggle('pre140270080808200', 'post140270080808200')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre140270080808200', 'post140270080808200')"><pre>                bit = node</pre></li>
                  
                  <li onclick="toggle('pre140270080808200', 'post140270080808200')"><pre>            bits.append(str(bit))</pre></li>
                  
                  <li onclick="toggle('pre140270080808200', 'post140270080808200')"><pre>        return mark_safe(&#39;&#39;.join(bits))</pre></li>
                  
                  <li onclick="toggle('pre140270080808200', 'post140270080808200')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080808200', 'post140270080808200')"><pre>    def get_nodes_by_type(self, nodetype):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270080808200')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270080808200">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>bits</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>[{&#39;None&#39;: None, &#39;False&#39;: False, &#39;True&#39;: True}, {}, {}, {&#39;transfers&#39;: []}]</pre></td>
                  </tr>
                
                  <tr>
                    <td>node</td>
                    <td class="code"><pre>&lt;ExtendsNode: extends &#39;onlinebank/base.html&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>[&lt;ExtendsNode: extends &#39;onlinebank/base.html&#39;&gt;]</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py</code> in <code>render_annotated</code>

          
            <div class="context" id="c140270080808392">
              
                <ol start="897" class="pre-context" id="pre140270080808392">
                
                  <li onclick="toggle('pre140270080808392', 'post140270080808392')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140270080808392', 'post140270080808392')"><pre>        Render the node. If debug is True and an exception occurs during</pre></li>
                
                  <li onclick="toggle('pre140270080808392', 'post140270080808392')"><pre>        rendering, the exception is annotated with contextual line information</pre></li>
                
                  <li onclick="toggle('pre140270080808392', 'post140270080808392')"><pre>        where it occurred in the template. For internal usage this method is</pre></li>
                
                  <li onclick="toggle('pre140270080808392', 'post140270080808392')"><pre>        preferred over using the render method directly.</pre></li>
                
                  <li onclick="toggle('pre140270080808392', 'post140270080808392')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140270080808392', 'post140270080808392')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="904" class="context-line">
                <li onclick="toggle('pre140270080808392', 'post140270080808392')"><pre>            return self.render(context)</pre> <span>...</span></li>
              </ol>
              
                <ol start='905' class="post-context" id="post140270080808392">
                  
                  <li onclick="toggle('pre140270080808392', 'post140270080808392')"><pre>        except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140270080808392', 'post140270080808392')"><pre>            if context.template.engine.debug and not hasattr(e, &#39;template_debug&#39;):</pre></li>
                  
                  <li onclick="toggle('pre140270080808392', 'post140270080808392')"><pre>                e.template_debug = context.render_context.template.get_exception_info(e, self.token)</pre></li>
                  
                  <li onclick="toggle('pre140270080808392', 'post140270080808392')"><pre>            raise</pre></li>
                  
                  <li onclick="toggle('pre140270080808392', 'post140270080808392')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080808392', 'post140270080808392')"><pre>    def __iter__(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270080808392')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270080808392">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>[{&#39;None&#39;: None, &#39;False&#39;: False, &#39;True&#39;: True}, {}, {}, {&#39;transfers&#39;: []}]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;ExtendsNode: extends &#39;onlinebank/base.html&#39;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/template/loader_tags.py</code> in <code>render</code>

          
            <div class="context" id="c140270080807496">
              
                <ol start="143" class="pre-context" id="pre140270080807496">
                
                  <li onclick="toggle('pre140270080807496', 'post140270080807496')"><pre>                              compiled_parent.nodelist.get_nodes_by_type(BlockNode)}</pre></li>
                
                  <li onclick="toggle('pre140270080807496', 'post140270080807496')"><pre>                    block_context.add_blocks(blocks)</pre></li>
                
                  <li onclick="toggle('pre140270080807496', 'post140270080807496')"><pre>                break</pre></li>
                
                  <li onclick="toggle('pre140270080807496', 'post140270080807496')"><pre></pre></li>
                
                  <li onclick="toggle('pre140270080807496', 'post140270080807496')"><pre>        # Call Template._render explicitly so the parser context stays</pre></li>
                
                  <li onclick="toggle('pre140270080807496', 'post140270080807496')"><pre>        # the same.</pre></li>
                
                  <li onclick="toggle('pre140270080807496', 'post140270080807496')"><pre>        with context.render_context.push_state(compiled_parent, isolated_context=False):</pre></li>
                
                </ol>
              
              <ol start="150" class="context-line">
                <li onclick="toggle('pre140270080807496', 'post140270080807496')"><pre>            return compiled_parent._render(context)</pre> <span>...</span></li>
              </ol>
              
                <ol start='151' class="post-context" id="post140270080807496">
                  
                  <li onclick="toggle('pre140270080807496', 'post140270080807496')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080807496', 'post140270080807496')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080807496', 'post140270080807496')"><pre>class IncludeNode(Node):</pre></li>
                  
                  <li onclick="toggle('pre140270080807496', 'post140270080807496')"><pre>    context_key = &#39;__include_context&#39;</pre></li>
                  
                  <li onclick="toggle('pre140270080807496', 'post140270080807496')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080807496', 'post140270080807496')"><pre>    def __init__(self, template, *args, extra_context=None, isolated_context=False, **kwargs):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270080807496')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270080807496">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>block_context</td>
                    <td class="code"><pre>&lt;django.template.loader_tags.BlockContext object at 0x7f932d6e0b70&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>blocks</td>
                    <td class="code"><pre>{&#39;content&#39;: &lt;Block Node: content. Contents: [&lt;TextNode: &#39;\n        &#39;&gt;]&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>compiled_parent</td>
                    <td class="code"><pre>&lt;django.template.base.Template object at 0x7f932cfed6a0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>[{&#39;None&#39;: None, &#39;False&#39;: False, &#39;True&#39;: True}, {}, {}, {&#39;transfers&#39;: []}]</pre></td>
                  </tr>
                
                  <tr>
                    <td>node</td>
                    <td class="code"><pre>&lt;django.template.defaulttags.LoadNode object at 0x7f932cff9208&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;ExtendsNode: extends &#39;onlinebank/base.html&#39;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py</code> in <code>_render</code>

          
            <div class="context" id="c140270080808584">
              
                <ol start="156" class="pre-context" id="pre140270080808584">
                
                  <li onclick="toggle('pre140270080808584', 'post140270080808584')"><pre>        self.nodelist = self.compile_nodelist()</pre></li>
                
                  <li onclick="toggle('pre140270080808584', 'post140270080808584')"><pre></pre></li>
                
                  <li onclick="toggle('pre140270080808584', 'post140270080808584')"><pre>    def __iter__(self):</pre></li>
                
                  <li onclick="toggle('pre140270080808584', 'post140270080808584')"><pre>        for node in self.nodelist:</pre></li>
                
                  <li onclick="toggle('pre140270080808584', 'post140270080808584')"><pre>            yield from node</pre></li>
                
                  <li onclick="toggle('pre140270080808584', 'post140270080808584')"><pre></pre></li>
                
                  <li onclick="toggle('pre140270080808584', 'post140270080808584')"><pre>    def _render(self, context):</pre></li>
                
                </ol>
              
              <ol start="163" class="context-line">
                <li onclick="toggle('pre140270080808584', 'post140270080808584')"><pre>        return self.nodelist.render(context)</pre> <span>...</span></li>
              </ol>
              
                <ol start='164' class="post-context" id="post140270080808584">
                  
                  <li onclick="toggle('pre140270080808584', 'post140270080808584')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080808584', 'post140270080808584')"><pre>    def render(self, context):</pre></li>
                  
                  <li onclick="toggle('pre140270080808584', 'post140270080808584')"><pre>        &quot;Display stage -- can be called many times&quot;</pre></li>
                  
                  <li onclick="toggle('pre140270080808584', 'post140270080808584')"><pre>        with context.render_context.push_state(self):</pre></li>
                  
                  <li onclick="toggle('pre140270080808584', 'post140270080808584')"><pre>            if context.template is None:</pre></li>
                  
                  <li onclick="toggle('pre140270080808584', 'post140270080808584')"><pre>                with context.bind_template(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270080808584')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270080808584">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>[{&#39;None&#39;: None, &#39;False&#39;: False, &#39;True&#39;: True}, {}, {}, {&#39;transfers&#39;: []}]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.template.base.Template object at 0x7f932cfed6a0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py</code> in <code>render</code>

          
            <div class="context" id="c140270080807816">
              
                <ol start="930" class="pre-context" id="pre140270080807816">
                
                  <li onclick="toggle('pre140270080807816', 'post140270080807816')"><pre>    # extend_nodelist().</pre></li>
                
                  <li onclick="toggle('pre140270080807816', 'post140270080807816')"><pre>    contains_nontext = False</pre></li>
                
                  <li onclick="toggle('pre140270080807816', 'post140270080807816')"><pre></pre></li>
                
                  <li onclick="toggle('pre140270080807816', 'post140270080807816')"><pre>    def render(self, context):</pre></li>
                
                  <li onclick="toggle('pre140270080807816', 'post140270080807816')"><pre>        bits = []</pre></li>
                
                  <li onclick="toggle('pre140270080807816', 'post140270080807816')"><pre>        for node in self:</pre></li>
                
                  <li onclick="toggle('pre140270080807816', 'post140270080807816')"><pre>            if isinstance(node, Node):</pre></li>
                
                </ol>
              
              <ol start="937" class="context-line">
                <li onclick="toggle('pre140270080807816', 'post140270080807816')"><pre>                bit = node.render_annotated(context)</pre> <span>...</span></li>
              </ol>
              
                <ol start='938' class="post-context" id="post140270080807816">
                  
                  <li onclick="toggle('pre140270080807816', 'post140270080807816')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre140270080807816', 'post140270080807816')"><pre>                bit = node</pre></li>
                  
                  <li onclick="toggle('pre140270080807816', 'post140270080807816')"><pre>            bits.append(str(bit))</pre></li>
                  
                  <li onclick="toggle('pre140270080807816', 'post140270080807816')"><pre>        return mark_safe(&#39;&#39;.join(bits))</pre></li>
                  
                  <li onclick="toggle('pre140270080807816', 'post140270080807816')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080807816', 'post140270080807816')"><pre>    def get_nodes_by_type(self, nodetype):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270080807816')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270080807816">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>bit</td>
                    <td class="code"><pre>(&#39;&quot; class=&quot;active&quot;&gt;History&lt;/a&gt;&lt;/li&gt;\n&#39;
 &#39;                &lt;/ul&gt;\n&#39;
 &#39;            &lt;/div&gt;\n&#39;
 &#39;        &lt;/div&gt;\n&#39;
 &#39;    &lt;/div&gt;\n&#39;
 &#39;    &lt;div class=&quot;content&quot;&gt;\n&#39;
 &#39;        &#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>bits</td>
                    <td class="code"><pre>[&#39;&#39;,
 &#39;\n&#39;
 &#39;\n&#39;
 &#39;&lt;!DOCTYPE html&gt; \n&#39;
 &#39;&lt;html lang=&quot;pl&quot;&gt; \n&#39;
 &#39;&lt;head&gt;  \n&#39;
 &#39;    &lt;meta charset=&quot;utf-8&quot;&gt; \n&#39;
 &#39;    &lt;title&gt;Jeleniogórska Zachodnia Grupa Kredytowa&lt;/title&gt; \n&#39;
 &#39;    &lt;meta name=&quot;description&quot; content=&quot;My Journey Through Computer Science&quot;&gt;\n&#39;
 &#39;    &lt;meta name=&quot;author&quot; content=&quot;Paweł Narolski&quot;&gt;\n&#39;
 &#39;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;/&gt;\n&#39;
 &#39;    &lt;link rel=&quot;stylesheet&quot; href=&quot;&#39;,
 &#39;/static/css/style.css&#39;,
 &#39;&quot;&gt;\n&#39;
 &#39;    &lt;link rel=&quot;stylesheet&quot; &#39;
 &#39;href=&quot;https://unpkg.com/purecss@1.0.0/build/pure-min.css&quot; &#39;
 &#39;integrity=&quot;sha384-nn4HPE8lTHyVtfCBi5yW9d20FjT8BJwUXyWZT9InLYax14RDjBj46LmSztkmNP9w&quot; &#39;
 &#39;crossorigin=&quot;anonymous&quot;&gt;\n&#39;
 &#39;\n&#39;
 &#39;&lt;/head&gt; \n&#39;
 &#39;&lt;body&gt;\n&#39;
 &#39;    &lt;div class=&quot;header&quot;&gt;\n&#39;
 &#39;        &lt;div class=&quot;branding&quot;&gt;\n&#39;
 &#39;            &lt;div class=&quot;logo&quot;&gt;\n&#39;
 &#39;                &lt;a class=&quot;logo-link&quot; href=&quot;&#39;,
 &#39;/transfers/home&#39;,
 &#39;&quot;&gt;JZGSKi Online Banking&lt;/a&gt;\n&#39;
 &#39;                &lt;h2&gt;Jeleniogórska Zachodnia Grupa Spółdzielczo-Kredytowa &#39;
 &#39;S.A.&lt;/h2&gt;\n&#39;
 &#39;            &lt;/div&gt;\n&#39;
 &#39;            &lt;div class=&quot;menu-container&quot;&gt;\n&#39;
 &#39;                &lt;ul class=&quot;menu&quot;&gt;\n&#39;
 &#39;                    &lt;li class=&quot;menu-item&quot;&gt;&lt;a href=&quot;&#39;,
 &#39;/transfers/home&#39;,
 &#39;&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;         \n&#39;
 &#39;                    &lt;li class=&quot;menu-item&quot;&gt;&lt;a href=&quot;&#39;,
 &#39;/transfers/new&#39;,
 &#39;&quot; class=&quot;active&quot;&gt;Transfer&lt;/a&gt;&lt;/li&gt;\n&#39;
 &#39;                    &lt;li class=&quot;menu-item&quot;&gt;&lt;a href=&quot;&#39;,
 &#39;/transfers/history&#39;,
 &#39;&quot; class=&quot;active&quot;&gt;History&lt;/a&gt;&lt;/li&gt;\n&#39;
 &#39;                &lt;/ul&gt;\n&#39;
 &#39;            &lt;/div&gt;\n&#39;
 &#39;        &lt;/div&gt;\n&#39;
 &#39;    &lt;/div&gt;\n&#39;
 &#39;    &lt;div class=&quot;content&quot;&gt;\n&#39;
 &#39;        &#39;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>[{&#39;None&#39;: None, &#39;False&#39;: False, &#39;True&#39;: True}, {}, {}, {&#39;transfers&#39;: []}]</pre></td>
                  </tr>
                
                  <tr>
                    <td>node</td>
                    <td class="code"><pre>&lt;Block Node: content. Contents: [&lt;TextNode: &#39;\n        &#39;&gt;]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>[&lt;django.template.defaulttags.LoadNode object at 0x7f932cff9208&gt;,
 &lt;TextNode: &#39;\n\n&lt;!DOCTYPE html&gt; \n&lt;html &#39;&gt;,
 &lt;django.templatetags.static.StaticNode object at 0x7f932cff9780&gt;,
 &lt;TextNode: &#39;&quot;&gt;\n    &lt;link rel=&quot;stylesh&#39;&gt;,
 &lt;django.template.defaulttags.URLNode object at 0x7f932cff9da0&gt;,
 &lt;TextNode: &#39;&quot;&gt;JZGSKi Online Banking&lt;/&#39;&gt;,
 &lt;django.template.defaulttags.URLNode object at 0x7f932cff92e8&gt;,
 &lt;TextNode: &#39;&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;         \n&#39;&gt;,
 &lt;django.template.defaulttags.URLNode object at 0x7f932cff9b38&gt;,
 &lt;TextNode: &#39;&quot; class=&quot;active&quot;&gt;Transfer&#39;&gt;,
 &lt;django.template.defaulttags.URLNode object at 0x7f932cff5ef0&gt;,
 &lt;TextNode: &#39;&quot; class=&quot;active&quot;&gt;History&lt;&#39;&gt;,
 &lt;Block Node: content. Contents: [&lt;TextNode: &#39;\n        &#39;&gt;]&gt;,
 &lt;TextNode: &#39;\n        &lt;div class=&quot;side&#39;&gt;,
 &lt;django.templatetags.static.StaticNode object at 0x7f932cff5a58&gt;,
 &lt;TextNode: &#39;&quot; alt=&quot;My picture&quot; /&gt;\n   &#39;&gt;,
 &lt;IfNode&gt;,
 &lt;TextNode: &#39;\n                &lt;/div&gt;\n &#39;&gt;]</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py</code> in <code>render_annotated</code>

          
            <div class="context" id="c140270080807368">
              
                <ol start="897" class="pre-context" id="pre140270080807368">
                
                  <li onclick="toggle('pre140270080807368', 'post140270080807368')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140270080807368', 'post140270080807368')"><pre>        Render the node. If debug is True and an exception occurs during</pre></li>
                
                  <li onclick="toggle('pre140270080807368', 'post140270080807368')"><pre>        rendering, the exception is annotated with contextual line information</pre></li>
                
                  <li onclick="toggle('pre140270080807368', 'post140270080807368')"><pre>        where it occurred in the template. For internal usage this method is</pre></li>
                
                  <li onclick="toggle('pre140270080807368', 'post140270080807368')"><pre>        preferred over using the render method directly.</pre></li>
                
                  <li onclick="toggle('pre140270080807368', 'post140270080807368')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140270080807368', 'post140270080807368')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="904" class="context-line">
                <li onclick="toggle('pre140270080807368', 'post140270080807368')"><pre>            return self.render(context)</pre> <span>...</span></li>
              </ol>
              
                <ol start='905' class="post-context" id="post140270080807368">
                  
                  <li onclick="toggle('pre140270080807368', 'post140270080807368')"><pre>        except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140270080807368', 'post140270080807368')"><pre>            if context.template.engine.debug and not hasattr(e, &#39;template_debug&#39;):</pre></li>
                  
                  <li onclick="toggle('pre140270080807368', 'post140270080807368')"><pre>                e.template_debug = context.render_context.template.get_exception_info(e, self.token)</pre></li>
                  
                  <li onclick="toggle('pre140270080807368', 'post140270080807368')"><pre>            raise</pre></li>
                  
                  <li onclick="toggle('pre140270080807368', 'post140270080807368')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080807368', 'post140270080807368')"><pre>    def __iter__(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270080807368')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270080807368">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>[{&#39;None&#39;: None, &#39;False&#39;: False, &#39;True&#39;: True}, {}, {}, {&#39;transfers&#39;: []}]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Block Node: content. Contents: [&lt;TextNode: &#39;\n        &#39;&gt;]&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/template/loader_tags.py</code> in <code>render</code>

          
            <div class="context" id="c140270080808776">
              
                <ol start="55" class="pre-context" id="pre140270080808776">
                
                  <li onclick="toggle('pre140270080808776', 'post140270080808776')"><pre>                push = block = block_context.pop(self.name)</pre></li>
                
                  <li onclick="toggle('pre140270080808776', 'post140270080808776')"><pre>                if block is None:</pre></li>
                
                  <li onclick="toggle('pre140270080808776', 'post140270080808776')"><pre>                    block = self</pre></li>
                
                  <li onclick="toggle('pre140270080808776', 'post140270080808776')"><pre>                # Create new block so we can store context without thread-safety issues.</pre></li>
                
                  <li onclick="toggle('pre140270080808776', 'post140270080808776')"><pre>                block = type(self)(block.name, block.nodelist)</pre></li>
                
                  <li onclick="toggle('pre140270080808776', 'post140270080808776')"><pre>                block.context = context</pre></li>
                
                  <li onclick="toggle('pre140270080808776', 'post140270080808776')"><pre>                context[&#39;block&#39;] = block</pre></li>
                
                </ol>
              
              <ol start="62" class="context-line">
                <li onclick="toggle('pre140270080808776', 'post140270080808776')"><pre>                result = block.nodelist.render(context)</pre> <span>...</span></li>
              </ol>
              
                <ol start='63' class="post-context" id="post140270080808776">
                  
                  <li onclick="toggle('pre140270080808776', 'post140270080808776')"><pre>                if push is not None:</pre></li>
                  
                  <li onclick="toggle('pre140270080808776', 'post140270080808776')"><pre>                    block_context.push(self.name, push)</pre></li>
                  
                  <li onclick="toggle('pre140270080808776', 'post140270080808776')"><pre>        return result</pre></li>
                  
                  <li onclick="toggle('pre140270080808776', 'post140270080808776')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080808776', 'post140270080808776')"><pre>    def super(self):</pre></li>
                  
                  <li onclick="toggle('pre140270080808776', 'post140270080808776')"><pre>        if not hasattr(self, &#39;context&#39;):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270080808776')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270080808776">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>block</td>
                    <td class="code"><pre>&lt;Block Node: content. Contents: [&lt;TextNode: &#39;\n\n&#39;&gt;, &lt;IfNode&gt;, &lt;TextNode: &#39;\n\n&#39;&gt;]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>block_context</td>
                    <td class="code"><pre>&lt;django.template.loader_tags.BlockContext object at 0x7f932d6e0b70&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>[{&#39;None&#39;: None, &#39;False&#39;: False, &#39;True&#39;: True}, {}, {}, {&#39;transfers&#39;: []}]</pre></td>
                  </tr>
                
                  <tr>
                    <td>push</td>
                    <td class="code"><pre>&lt;Block Node: content. Contents: [&lt;TextNode: &#39;\n\n&#39;&gt;, &lt;IfNode&gt;, &lt;TextNode: &#39;\n\n&#39;&gt;]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Block Node: content. Contents: [&lt;TextNode: &#39;\n        &#39;&gt;]&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py</code> in <code>render</code>

          
            <div class="context" id="c140270080809800">
              
                <ol start="930" class="pre-context" id="pre140270080809800">
                
                  <li onclick="toggle('pre140270080809800', 'post140270080809800')"><pre>    # extend_nodelist().</pre></li>
                
                  <li onclick="toggle('pre140270080809800', 'post140270080809800')"><pre>    contains_nontext = False</pre></li>
                
                  <li onclick="toggle('pre140270080809800', 'post140270080809800')"><pre></pre></li>
                
                  <li onclick="toggle('pre140270080809800', 'post140270080809800')"><pre>    def render(self, context):</pre></li>
                
                  <li onclick="toggle('pre140270080809800', 'post140270080809800')"><pre>        bits = []</pre></li>
                
                  <li onclick="toggle('pre140270080809800', 'post140270080809800')"><pre>        for node in self:</pre></li>
                
                  <li onclick="toggle('pre140270080809800', 'post140270080809800')"><pre>            if isinstance(node, Node):</pre></li>
                
                </ol>
              
              <ol start="937" class="context-line">
                <li onclick="toggle('pre140270080809800', 'post140270080809800')"><pre>                bit = node.render_annotated(context)</pre> <span>...</span></li>
              </ol>
              
                <ol start='938' class="post-context" id="post140270080809800">
                  
                  <li onclick="toggle('pre140270080809800', 'post140270080809800')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre140270080809800', 'post140270080809800')"><pre>                bit = node</pre></li>
                  
                  <li onclick="toggle('pre140270080809800', 'post140270080809800')"><pre>            bits.append(str(bit))</pre></li>
                  
                  <li onclick="toggle('pre140270080809800', 'post140270080809800')"><pre>        return mark_safe(&#39;&#39;.join(bits))</pre></li>
                  
                  <li onclick="toggle('pre140270080809800', 'post140270080809800')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080809800', 'post140270080809800')"><pre>    def get_nodes_by_type(self, nodetype):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270080809800')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270080809800">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>bit</td>
                    <td class="code"><pre>&#39;\n\n&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>bits</td>
                    <td class="code"><pre>[&#39;\n\n&#39;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>[{&#39;None&#39;: None, &#39;False&#39;: False, &#39;True&#39;: True}, {}, {}, {&#39;transfers&#39;: []}]</pre></td>
                  </tr>
                
                  <tr>
                    <td>node</td>
                    <td class="code"><pre>&lt;IfNode&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>[&lt;TextNode: &#39;\n\n&#39;&gt;, &lt;IfNode&gt;, &lt;TextNode: &#39;\n\n&#39;&gt;]</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py</code> in <code>render_annotated</code>

          
            <div class="context" id="c140270080807112">
              
                <ol start="897" class="pre-context" id="pre140270080807112">
                
                  <li onclick="toggle('pre140270080807112', 'post140270080807112')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140270080807112', 'post140270080807112')"><pre>        Render the node. If debug is True and an exception occurs during</pre></li>
                
                  <li onclick="toggle('pre140270080807112', 'post140270080807112')"><pre>        rendering, the exception is annotated with contextual line information</pre></li>
                
                  <li onclick="toggle('pre140270080807112', 'post140270080807112')"><pre>        where it occurred in the template. For internal usage this method is</pre></li>
                
                  <li onclick="toggle('pre140270080807112', 'post140270080807112')"><pre>        preferred over using the render method directly.</pre></li>
                
                  <li onclick="toggle('pre140270080807112', 'post140270080807112')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140270080807112', 'post140270080807112')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="904" class="context-line">
                <li onclick="toggle('pre140270080807112', 'post140270080807112')"><pre>            return self.render(context)</pre> <span>...</span></li>
              </ol>
              
                <ol start='905' class="post-context" id="post140270080807112">
                  
                  <li onclick="toggle('pre140270080807112', 'post140270080807112')"><pre>        except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140270080807112', 'post140270080807112')"><pre>            if context.template.engine.debug and not hasattr(e, &#39;template_debug&#39;):</pre></li>
                  
                  <li onclick="toggle('pre140270080807112', 'post140270080807112')"><pre>                e.template_debug = context.render_context.template.get_exception_info(e, self.token)</pre></li>
                  
                  <li onclick="toggle('pre140270080807112', 'post140270080807112')"><pre>            raise</pre></li>
                  
                  <li onclick="toggle('pre140270080807112', 'post140270080807112')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270080807112', 'post140270080807112')"><pre>    def __iter__(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270080807112')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270080807112">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>[{&#39;None&#39;: None, &#39;False&#39;: False, &#39;True&#39;: True}, {}, {}, {&#39;transfers&#39;: []}]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;IfNode&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/template/defaulttags.py</code> in <code>render</code>

          
            <div class="context" id="c140270089497800">
              
                <ol start="302" class="pre-context" id="pre140270089497800">
                
                  <li onclick="toggle('pre140270089497800', 'post140270089497800')"><pre>                    match = condition.eval(context)</pre></li>
                
                  <li onclick="toggle('pre140270089497800', 'post140270089497800')"><pre>                except VariableDoesNotExist:</pre></li>
                
                  <li onclick="toggle('pre140270089497800', 'post140270089497800')"><pre>                    match = None</pre></li>
                
                  <li onclick="toggle('pre140270089497800', 'post140270089497800')"><pre>            else:                               # else clause</pre></li>
                
                  <li onclick="toggle('pre140270089497800', 'post140270089497800')"><pre>                match = True</pre></li>
                
                  <li onclick="toggle('pre140270089497800', 'post140270089497800')"><pre></pre></li>
                
                  <li onclick="toggle('pre140270089497800', 'post140270089497800')"><pre>            if match:</pre></li>
                
                </ol>
              
              <ol start="309" class="context-line">
                <li onclick="toggle('pre140270089497800', 'post140270089497800')"><pre>                return nodelist.render(context)</pre> <span>...</span></li>
              </ol>
              
                <ol start='310' class="post-context" id="post140270089497800">
                  
                  <li onclick="toggle('pre140270089497800', 'post140270089497800')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270089497800', 'post140270089497800')"><pre>        return &#39;&#39;</pre></li>
                  
                  <li onclick="toggle('pre140270089497800', 'post140270089497800')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270089497800', 'post140270089497800')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270089497800', 'post140270089497800')"><pre>class LoremNode(Node):</pre></li>
                  
                  <li onclick="toggle('pre140270089497800', 'post140270089497800')"><pre>    def __init__(self, count, method, common):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270089497800')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270089497800">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>condition</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>[{&#39;None&#39;: None, &#39;False&#39;: False, &#39;True&#39;: True}, {}, {}, {&#39;transfers&#39;: []}]</pre></td>
                  </tr>
                
                  <tr>
                    <td>match</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>nodelist</td>
                    <td class="code"><pre>[&lt;TextNode: &#39;\n&lt;div class=&quot;article&quot;&gt;\n  &#39;&gt;,
 &lt;django.template.defaulttags.URLNode object at 0x7f932d6e0898&gt;,
 &lt;TextNode: &#39;&gt;log in&lt;/a&gt; first&lt;/p&gt;\n&lt;/d&#39;&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;IfNode&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py</code> in <code>render</code>

          
            <div class="context" id="c140270089495752">
              
                <ol start="930" class="pre-context" id="pre140270089495752">
                
                  <li onclick="toggle('pre140270089495752', 'post140270089495752')"><pre>    # extend_nodelist().</pre></li>
                
                  <li onclick="toggle('pre140270089495752', 'post140270089495752')"><pre>    contains_nontext = False</pre></li>
                
                  <li onclick="toggle('pre140270089495752', 'post140270089495752')"><pre></pre></li>
                
                  <li onclick="toggle('pre140270089495752', 'post140270089495752')"><pre>    def render(self, context):</pre></li>
                
                  <li onclick="toggle('pre140270089495752', 'post140270089495752')"><pre>        bits = []</pre></li>
                
                  <li onclick="toggle('pre140270089495752', 'post140270089495752')"><pre>        for node in self:</pre></li>
                
                  <li onclick="toggle('pre140270089495752', 'post140270089495752')"><pre>            if isinstance(node, Node):</pre></li>
                
                </ol>
              
              <ol start="937" class="context-line">
                <li onclick="toggle('pre140270089495752', 'post140270089495752')"><pre>                bit = node.render_annotated(context)</pre> <span>...</span></li>
              </ol>
              
                <ol start='938' class="post-context" id="post140270089495752">
                  
                  <li onclick="toggle('pre140270089495752', 'post140270089495752')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre140270089495752', 'post140270089495752')"><pre>                bit = node</pre></li>
                  
                  <li onclick="toggle('pre140270089495752', 'post140270089495752')"><pre>            bits.append(str(bit))</pre></li>
                  
                  <li onclick="toggle('pre140270089495752', 'post140270089495752')"><pre>        return mark_safe(&#39;&#39;.join(bits))</pre></li>
                  
                  <li onclick="toggle('pre140270089495752', 'post140270089495752')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270089495752', 'post140270089495752')"><pre>    def get_nodes_by_type(self, nodetype):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270089495752')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270089495752">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>bit</td>
                    <td class="code"><pre>(&#39;\n&#39;
 &#39;&lt;div class=&quot;article&quot;&gt;\n&#39;
 &#39;    &lt;h3&gt;User not logged in&lt;/h3&gt;\n&#39;
 &#39;    &lt;p&gt;Please &lt;a href=&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>bits</td>
                    <td class="code"><pre>[&#39;\n&#39;
 &#39;&lt;div class=&quot;article&quot;&gt;\n&#39;
 &#39;    &lt;h3&gt;User not logged in&lt;/h3&gt;\n&#39;
 &#39;    &lt;p&gt;Please &lt;a href=&#39;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>[{&#39;None&#39;: None, &#39;False&#39;: False, &#39;True&#39;: True}, {}, {}, {&#39;transfers&#39;: []}]</pre></td>
                  </tr>
                
                  <tr>
                    <td>node</td>
                    <td class="code"><pre>&lt;django.template.defaulttags.URLNode object at 0x7f932d6e0898&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>[&lt;TextNode: &#39;\n&lt;div class=&quot;article&quot;&gt;\n  &#39;&gt;,
 &lt;django.template.defaulttags.URLNode object at 0x7f932d6e0898&gt;,
 &lt;TextNode: &#39;&gt;log in&lt;/a&gt; first&lt;/p&gt;\n&lt;/d&#39;&gt;]</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py</code> in <code>render_annotated</code>

          
            <div class="context" id="c140270089496648">
              
                <ol start="897" class="pre-context" id="pre140270089496648">
                
                  <li onclick="toggle('pre140270089496648', 'post140270089496648')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140270089496648', 'post140270089496648')"><pre>        Render the node. If debug is True and an exception occurs during</pre></li>
                
                  <li onclick="toggle('pre140270089496648', 'post140270089496648')"><pre>        rendering, the exception is annotated with contextual line information</pre></li>
                
                  <li onclick="toggle('pre140270089496648', 'post140270089496648')"><pre>        where it occurred in the template. For internal usage this method is</pre></li>
                
                  <li onclick="toggle('pre140270089496648', 'post140270089496648')"><pre>        preferred over using the render method directly.</pre></li>
                
                  <li onclick="toggle('pre140270089496648', 'post140270089496648')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140270089496648', 'post140270089496648')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="904" class="context-line">
                <li onclick="toggle('pre140270089496648', 'post140270089496648')"><pre>            return self.render(context)</pre> <span>...</span></li>
              </ol>
              
                <ol start='905' class="post-context" id="post140270089496648">
                  
                  <li onclick="toggle('pre140270089496648', 'post140270089496648')"><pre>        except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140270089496648', 'post140270089496648')"><pre>            if context.template.engine.debug and not hasattr(e, &#39;template_debug&#39;):</pre></li>
                  
                  <li onclick="toggle('pre140270089496648', 'post140270089496648')"><pre>                e.template_debug = context.render_context.template.get_exception_info(e, self.token)</pre></li>
                  
                  <li onclick="toggle('pre140270089496648', 'post140270089496648')"><pre>            raise</pre></li>
                  
                  <li onclick="toggle('pre140270089496648', 'post140270089496648')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270089496648', 'post140270089496648')"><pre>    def __iter__(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270089496648')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270089496648">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>[{&#39;None&#39;: None, &#39;False&#39;: False, &#39;True&#39;: True}, {}, {}, {&#39;transfers&#39;: []}]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.template.defaulttags.URLNode object at 0x7f932d6e0898&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/template/defaulttags.py</code> in <code>render</code>

          
            <div class="context" id="c140270089497672">
              
                <ol start="435" class="pre-context" id="pre140270089497672">
                
                  <li onclick="toggle('pre140270089497672', 'post140270089497672')"><pre>                current_app = context.request.resolver_match.namespace</pre></li>
                
                  <li onclick="toggle('pre140270089497672', 'post140270089497672')"><pre>            except AttributeError:</pre></li>
                
                  <li onclick="toggle('pre140270089497672', 'post140270089497672')"><pre>                current_app = None</pre></li>
                
                  <li onclick="toggle('pre140270089497672', 'post140270089497672')"><pre>        # Try to look up the URL. If it fails, raise NoReverseMatch unless the</pre></li>
                
                  <li onclick="toggle('pre140270089497672', 'post140270089497672')"><pre>        # {% url ... as var %} construct is used, in which case return nothing.</pre></li>
                
                  <li onclick="toggle('pre140270089497672', 'post140270089497672')"><pre>        url = &#39;&#39;</pre></li>
                
                  <li onclick="toggle('pre140270089497672', 'post140270089497672')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="442" class="context-line">
                <li onclick="toggle('pre140270089497672', 'post140270089497672')"><pre>            url = reverse(view_name, args=args, kwargs=kwargs, current_app=current_app)</pre> <span>...</span></li>
              </ol>
              
                <ol start='443' class="post-context" id="post140270089497672">
                  
                  <li onclick="toggle('pre140270089497672', 'post140270089497672')"><pre>        except NoReverseMatch:</pre></li>
                  
                  <li onclick="toggle('pre140270089497672', 'post140270089497672')"><pre>            if self.asvar is None:</pre></li>
                  
                  <li onclick="toggle('pre140270089497672', 'post140270089497672')"><pre>                raise</pre></li>
                  
                  <li onclick="toggle('pre140270089497672', 'post140270089497672')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270089497672', 'post140270089497672')"><pre>        if self.asvar:</pre></li>
                  
                  <li onclick="toggle('pre140270089497672', 'post140270089497672')"><pre>            context[self.asvar] = url</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270089497672')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270089497672">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>NoReverseMatch</td>
                    <td class="code"><pre>&lt;class &#39;django.urls.exceptions.NoReverseMatch&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>[{&#39;None&#39;: None, &#39;False&#39;: False, &#39;True&#39;: True}, {}, {}, {&#39;transfers&#39;: []}]</pre></td>
                  </tr>
                
                  <tr>
                    <td>current_app</td>
                    <td class="code"><pre>&#39;&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>reverse</td>
                    <td class="code"><pre>&lt;function reverse at 0x7f932ed3c598&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.template.defaulttags.URLNode object at 0x7f932d6e0898&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>&#39;&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_name</td>
                    <td class="code"><pre>&#39;login&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/urls/base.py</code> in <code>reverse</code>

          
            <div class="context" id="c140270089494664">
              
                <ol start="83" class="pre-context" id="pre140270089494664">
                
                  <li onclick="toggle('pre140270089494664', 'post140270089494664')"><pre>                        (key, &#39;:&#39;.join(resolved_path))</pre></li>
                
                  <li onclick="toggle('pre140270089494664', 'post140270089494664')"><pre>                    )</pre></li>
                
                  <li onclick="toggle('pre140270089494664', 'post140270089494664')"><pre>                else:</pre></li>
                
                  <li onclick="toggle('pre140270089494664', 'post140270089494664')"><pre>                    raise NoReverseMatch(&quot;%s is not a registered namespace&quot; % key)</pre></li>
                
                  <li onclick="toggle('pre140270089494664', 'post140270089494664')"><pre>        if ns_pattern:</pre></li>
                
                  <li onclick="toggle('pre140270089494664', 'post140270089494664')"><pre>            resolver = get_ns_resolver(ns_pattern, resolver, tuple(ns_converters.items()))</pre></li>
                
                  <li onclick="toggle('pre140270089494664', 'post140270089494664')"><pre></pre></li>
                
                </ol>
              
              <ol start="90" class="context-line">
                <li onclick="toggle('pre140270089494664', 'post140270089494664')"><pre>    return iri_to_uri(resolver._reverse_with_prefix(view, prefix, *args, **kwargs))</pre> <span>...</span></li>
              </ol>
              
                <ol start='91' class="post-context" id="post140270089494664">
                  
                  <li onclick="toggle('pre140270089494664', 'post140270089494664')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270089494664', 'post140270089494664')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270089494664', 'post140270089494664')"><pre>reverse_lazy = lazy(reverse, str)</pre></li>
                  
                  <li onclick="toggle('pre140270089494664', 'post140270089494664')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270089494664', 'post140270089494664')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140270089494664', 'post140270089494664')"><pre>def clear_url_caches():</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270089494664')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270089494664">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>current_app</td>
                    <td class="code"><pre>&#39;&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>current_path</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>ns_converters</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>ns_pattern</td>
                    <td class="code"><pre>&#39;&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>parts</td>
                    <td class="code"><pre>[&#39;login&#39;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>path</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>prefix</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolved_path</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;URLResolver &#39;banking.urls&#39; (None:None) &#39;^/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>urlconf</td>
                    <td class="code"><pre>&#39;banking.urls&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>view</td>
                    <td class="code"><pre>&#39;login&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>viewname</td>
                    <td class="code"><pre>&#39;login&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/parallels/.local/lib/python3.5/site-packages/django/urls/resolvers.py</code> in <code>_reverse_with_prefix</code>

          
            <div class="context" id="c140270089496968">
              
                <ol start="615" class="pre-context" id="pre140270089496968">
                
                  <li onclick="toggle('pre140270089496968', 'post140270089496968')"><pre>                (lookup_view_s, arg_msg, len(patterns), patterns)</pre></li>
                
                  <li onclick="toggle('pre140270089496968', 'post140270089496968')"><pre>            )</pre></li>
                
                  <li onclick="toggle('pre140270089496968', 'post140270089496968')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre140270089496968', 'post140270089496968')"><pre>            msg = (</pre></li>
                
                  <li onclick="toggle('pre140270089496968', 'post140270089496968')"><pre>                &quot;Reverse for &#39;%(view)s&#39; not found. &#39;%(view)s&#39; is not &quot;</pre></li>
                
                  <li onclick="toggle('pre140270089496968', 'post140270089496968')"><pre>                &quot;a valid view function or pattern name.&quot; % {&#39;view&#39;: lookup_view_s}</pre></li>
                
                  <li onclick="toggle('pre140270089496968', 'post140270089496968')"><pre>            )</pre></li>
                
                </ol>
              
              <ol start="622" class="context-line">
                <li onclick="toggle('pre140270089496968', 'post140270089496968')"><pre>        raise NoReverseMatch(msg)</pre> <span>...</span></li>
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140270089496968')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140270089496968">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>_prefix</td>
                    <td class="code"><pre>&#39;/&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>lookup_view</td>
                    <td class="code"><pre>&#39;login&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>lookup_view_s</td>
                    <td class="code"><pre>&#39;login&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>m</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>msg</td>
                    <td class="code"><pre>(&quot;Reverse for &#39;login&#39; not found. &#39;login&#39; is not a valid view function or &quot;
 &#39;pattern name.&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>n</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>patterns</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>possibilities</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;URLResolver &#39;banking.urls&#39; (None:None) &#39;^/&#39;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
    </ul>
  </div>
  <form action="http://dpaste.com/" name="pasteform" id="pasteform" method="post">

  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="NoReverseMatch at /transfers/history">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: GET
Request URL: http://127.0.0.1:8000/transfers/history

Django Version: 2.1.3
Python Version: 3.5.3
Installed Applications:
[&#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;onlinebank&#39;]
Installed Middleware:
[&#39;django.middleware.security.SecurityMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]


Template error:
In template /home/parallels/.local/share/Trash/files/Banking/onlinebank/templates/onlinebank/base.html, error at line 0
   Reverse for &#39;login&#39; not found. &#39;login&#39; is not a valid view function or pattern name.
   1 : {% load static %}
   2 : 
   3 : &lt;!DOCTYPE html&gt; 
   4 : &lt;html lang=&quot;pl&quot;&gt; 
   5 : &lt;head&gt;  
   6 :     &lt;meta charset=&quot;utf-8&quot;&gt; 
   7 :     &lt;title&gt;Jeleniogórska Zachodnia Grupa Kredytowa&lt;/title&gt; 
   8 :     &lt;meta name=&quot;description&quot; content=&quot;My Journey Through Computer Science&quot;&gt;
   9 :     &lt;meta name=&quot;author&quot; content=&quot;Paweł Narolski&quot;&gt;
   10 :     &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;/&gt;


Traceback:

File "/home/parallels/.local/lib/python3.5/site-packages/django/core/handlers/exception.py" in inner
  34.             response = get_response(request)

File "/home/parallels/.local/lib/python3.5/site-packages/django/core/handlers/base.py" in _get_response
  126.                 response = self.process_exception_by_middleware(e, request)

File "/home/parallels/.local/lib/python3.5/site-packages/django/core/handlers/base.py" in _get_response
  124.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)

File "/home/parallels/.local/share/Trash/files/Banking/onlinebank/views.py" in history
  50.     return render(request, &#39;onlinebank/history.html&#39;, {&#39;transfers&#39;: transfers})

File "/home/parallels/.local/lib/python3.5/site-packages/django/shortcuts.py" in render
  36.     content = loader.render_to_string(template_name, context, request, using=using)

File "/home/parallels/.local/lib/python3.5/site-packages/django/template/loader.py" in render_to_string
  62.     return template.render(context, request)

File "/home/parallels/.local/lib/python3.5/site-packages/django/template/backends/django.py" in render
  61.             return self.template.render(context)

File "/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py" in render
  171.                     return self._render(context)

File "/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py" in _render
  163.         return self.nodelist.render(context)

File "/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py" in render
  937.                 bit = node.render_annotated(context)

File "/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py" in render_annotated
  904.             return self.render(context)

File "/home/parallels/.local/lib/python3.5/site-packages/django/template/loader_tags.py" in render
  150.             return compiled_parent._render(context)

File "/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py" in _render
  163.         return self.nodelist.render(context)

File "/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py" in render
  937.                 bit = node.render_annotated(context)

File "/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py" in render_annotated
  904.             return self.render(context)

File "/home/parallels/.local/lib/python3.5/site-packages/django/template/loader_tags.py" in render
  62.                 result = block.nodelist.render(context)

File "/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py" in render
  937.                 bit = node.render_annotated(context)

File "/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py" in render_annotated
  904.             return self.render(context)

File "/home/parallels/.local/lib/python3.5/site-packages/django/template/defaulttags.py" in render
  309.                 return nodelist.render(context)

File "/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py" in render
  937.                 bit = node.render_annotated(context)

File "/home/parallels/.local/lib/python3.5/site-packages/django/template/base.py" in render_annotated
  904.             return self.render(context)

File "/home/parallels/.local/lib/python3.5/site-packages/django/template/defaulttags.py" in render
  442.             url = reverse(view_name, args=args, kwargs=kwargs, current_app=current_app)

File "/home/parallels/.local/lib/python3.5/site-packages/django/urls/base.py" in reverse
  90.     return iri_to_uri(resolver._reverse_with_prefix(view, prefix, *args, **kwargs))

File "/home/parallels/.local/lib/python3.5/site-packages/django/urls/resolvers.py" in _reverse_with_prefix
  622.         raise NoReverseMatch(msg)

Exception Type: NoReverseMatch at /transfers/history
Exception Value: Reverse for &#39;login&#39; not found. &#39;login&#39; is not a valid view function or pattern name.
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>
</div>



<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  
  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  


  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>COLORTERM</td>
          <td class="code"><pre>&#39;truecolor&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#39;text/plain&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DBUS_SESSION_BUS_ADDRESS</td>
          <td class="code"><pre>&#39;unix:path=/run/user/1000/bus&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DESKTOP_SESSION</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DISPLAY</td>
          <td class="code"><pre>&#39;:1&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DJANGO_SETTINGS_MODULE</td>
          <td class="code"><pre>&#39;banking.settings&#39;</pre></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><pre>&#39;CGI/1.1&#39;</pre></td>
        </tr>
      
        <tr>
          <td>GDMSESSION</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>GDM_LANG</td>
          <td class="code"><pre>&#39;en_US.UTF-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>GJS_DEBUG_OUTPUT</td>
          <td class="code"><pre>&#39;stderr&#39;</pre></td>
        </tr>
      
        <tr>
          <td>GJS_DEBUG_TOPICS</td>
          <td class="code"><pre>&#39;JS ERROR;JS LOG&#39;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_DESKTOP_SESSION_ID</td>
          <td class="code"><pre>&#39;this-is-deprecated&#39;</pre></td>
        </tr>
      
        <tr>
          <td>GPG_AGENT_INFO</td>
          <td class="code"><pre>&#39;/run/user/1000/gnupg/S.gpg-agent:0:1&#39;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_MODULES</td>
          <td class="code"><pre>&#39;gail:atk-bridge&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HOME</td>
          <td class="code"><pre>&#39;/home/parallels&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#39;gzip&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_CONNECTION</td>
          <td class="code"><pre>&#39;keep-alive&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#39;127.0.0.1:8000&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_RANGE</td>
          <td class="code"><pre>&#39;bytes=0-399999&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_REFERER</td>
          <td class="code"><pre>&#39;http://127.0.0.1/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#39;Mozilla/5.0 SF/2.10b&#39;</pre></td>
        </tr>
      
        <tr>
          <td>JOURNAL_STREAM</td>
          <td class="code"><pre>&#39;8:19561&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANG</td>
          <td class="code"><pre>&#39;en_US.UTF-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGNAME</td>
          <td class="code"><pre>&#39;parallels&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LS_COLORS</td>
          <td class="code"><pre>&#39;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:&#39;</pre></td>
        </tr>
      
        <tr>
          <td>OLDPWD</td>
          <td class="code"><pre>&#39;/home/parallels/Desktop&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PATH</td>
          <td class="code"><pre>&#39;/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#39;/transfers/history&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PWD</td>
          <td class="code"><pre>&#39;/home/parallels/Desktop/Banking&#39;</pre></td>
        </tr>
      
        <tr>
          <td>QT_ACCESSIBILITY</td>
          <td class="code"><pre>&#39;1&#39;</pre></td>
        </tr>
      
        <tr>
          <td>QT_LINUX_ACCESSIBILITY_ALWAYS_ON</td>
          <td class="code"><pre>&#39;1&#39;</pre></td>
        </tr>
      
        <tr>
          <td>QT_QPA_PLATFORMTHEME</td>
          <td class="code"><pre>&#39;qgnomeplatform&#39;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#39;127.0.0.1&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_HOST</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#39;GET&#39;</pre></td>
        </tr>
      
        <tr>
          <td>RUN_MAIN</td>
          <td class="code"><pre>&#39;true&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#39;localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#39;8000&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#39;HTTP/1.1&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#39;WSGIServer/0.2&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_MANAGER</td>
          <td class="code"><pre>&#39;local/debian-gnu-linux-vm:@/tmp/.ICE-unix/1249,unix/debian-gnu-linux-vm:/tmp/.ICE-unix/1249&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHELL</td>
          <td class="code"><pre>&#39;/bin/bash&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHLVL</td>
          <td class="code"><pre>&#39;1&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AGENT_PID</td>
          <td class="code"><pre>&#39;1300&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AUTH_SOCK</td>
          <td class="code"><pre>&#39;/run/user/1000/keyring/ssh&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TERM</td>
          <td class="code"><pre>&#39;xterm-256color&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TZ</td>
          <td class="code"><pre>&#39;Europe/Warsaw&#39;</pre></td>
        </tr>
      
        <tr>
          <td>USER</td>
          <td class="code"><pre>&#39;parallels&#39;</pre></td>
        </tr>
      
        <tr>
          <td>USERNAME</td>
          <td class="code"><pre>&#39;parallels&#39;</pre></td>
        </tr>
      
        <tr>
          <td>VTE_VERSION</td>
          <td class="code"><pre>&#39;4601&#39;</pre></td>
        </tr>
      
        <tr>
          <td>WINDOWID</td>
          <td class="code"><pre>&#39;27262981&#39;</pre></td>
        </tr>
      
        <tr>
          <td>WINDOWPATH</td>
          <td class="code"><pre>&#39;2&#39;</pre></td>
        </tr>
      
        <tr>
          <td>XAUTHORITY</td>
          <td class="code"><pre>&#39;/run/user/1000/gdm/Xauthority&#39;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#39;GNOME&#39;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_DATA_DIRS</td>
          <td class="code"><pre>&#39;/usr/share/gnome:/usr/local/share/:/usr/share/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_MENU_PREFIX</td>
          <td class="code"><pre>&#39;gnome-&#39;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_RUNTIME_DIR</td>
          <td class="code"><pre>&#39;/run/user/1000&#39;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SEAT</td>
          <td class="code"><pre>&#39;seat0&#39;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_DESKTOP</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_ID</td>
          <td class="code"><pre>&#39;4&#39;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_TYPE</td>
          <td class="code"><pre>&#39;x11&#39;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_VTNR</td>
          <td class="code"><pre>&#39;2&#39;</pre></td>
        </tr>
      
        <tr>
          <td>_</td>
          <td class="code"><pre>&#39;/usr/bin/python3&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=&#39;&lt;stderr&gt;&#39; mode=&#39;w&#39; encoding=&#39;UTF-8&#39;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;_io.BufferedReader name=8&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#39;http&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>banking.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#39;django.contrib.auth.backends.ModelBackend&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#39;auth.User&#39;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>&#39;/home/parallels/.local/share/Trash/files/Banking&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#39;csrftoken&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#39;Lax&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,
             &#39;AUTOCOMMIT&#39;: True,
             &#39;CONN_MAX_AGE&#39;: 0,
             &#39;ENGINE&#39;: &#39;django.db.backends.sqlite3&#39;,
             &#39;HOST&#39;: &#39;&#39;,
             &#39;NAME&#39;: &#39;/home/parallels/.local/share/Trash/files/Banking/db.sqlite3&#39;,
             &#39;OPTIONS&#39;: {},
             &#39;PASSWORD&#39;: &#39;********************&#39;,
             &#39;PORT&#39;: &#39;&#39;,
             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,
                      &#39;COLLATION&#39;: None,
                      &#39;MIRROR&#39;: None,
                      &#39;NAME&#39;: None},
             &#39;TIME_ZONE&#39;: None,
             &#39;USER&#39;: &#39;&#39;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y, P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,
 &#39;%Y-%m-%d %H:%M:%S.%f&#39;,
 &#39;%Y-%m-%d %H:%M&#39;,
 &#39;%Y-%m-%d&#39;,
 &#39;%m/%d/%Y %H:%M:%S&#39;,
 &#39;%m/%d/%Y %H:%M:%S.%f&#39;,
 &#39;%m/%d/%Y %H:%M&#39;,
 &#39;%m/%d/%Y&#39;,
 &#39;%m/%d/%y %H:%M:%S&#39;,
 &#39;%m/%d/%y %H:%M:%S.%f&#39;,
 &#39;%m/%d/%y %H:%M&#39;,
 &#39;%m/%d/%y&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%Y-%m-%d&#39;,
 &#39;%m/%d/%Y&#39;,
 &#39;%m/%d/%y&#39;,
 &#39;%b %d %Y&#39;,
 &#39;%b %d, %Y&#39;,
 &#39;%d %b %Y&#39;,
 &#39;%d %b, %Y&#39;,
 &#39;%B %d %Y&#39;,
 &#39;%B %d, %Y&#39;,
 &#39;%d %B %Y&#39;,
 &#39;%d %B, %Y&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#39;.&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CONTENT_TYPE</td>
          <td class="code"><pre>&#39;text/html&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#39;webmaster@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#39;localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#39;[Django] &#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#39;django.core.files.uploadhandler.MemoryFileUploadHandler&#39;,
 &#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;onlinebank&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#39;af&#39;, &#39;Afrikaans&#39;),
 (&#39;ar&#39;, &#39;Arabic&#39;),
 (&#39;ast&#39;, &#39;Asturian&#39;),
 (&#39;az&#39;, &#39;Azerbaijani&#39;),
 (&#39;bg&#39;, &#39;Bulgarian&#39;),
 (&#39;be&#39;, &#39;Belarusian&#39;),
 (&#39;bn&#39;, &#39;Bengali&#39;),
 (&#39;br&#39;, &#39;Breton&#39;),
 (&#39;bs&#39;, &#39;Bosnian&#39;),
 (&#39;ca&#39;, &#39;Catalan&#39;),
 (&#39;cs&#39;, &#39;Czech&#39;),
 (&#39;cy&#39;, &#39;Welsh&#39;),
 (&#39;da&#39;, &#39;Danish&#39;),
 (&#39;de&#39;, &#39;German&#39;),
 (&#39;dsb&#39;, &#39;Lower Sorbian&#39;),
 (&#39;el&#39;, &#39;Greek&#39;),
 (&#39;en&#39;, &#39;English&#39;),
 (&#39;en-au&#39;, &#39;Australian English&#39;),
 (&#39;en-gb&#39;, &#39;British English&#39;),
 (&#39;eo&#39;, &#39;Esperanto&#39;),
 (&#39;es&#39;, &#39;Spanish&#39;),
 (&#39;es-ar&#39;, &#39;Argentinian Spanish&#39;),
 (&#39;es-co&#39;, &#39;Colombian Spanish&#39;),
 (&#39;es-mx&#39;, &#39;Mexican Spanish&#39;),
 (&#39;es-ni&#39;, &#39;Nicaraguan Spanish&#39;),
 (&#39;es-ve&#39;, &#39;Venezuelan Spanish&#39;),
 (&#39;et&#39;, &#39;Estonian&#39;),
 (&#39;eu&#39;, &#39;Basque&#39;),
 (&#39;fa&#39;, &#39;Persian&#39;),
 (&#39;fi&#39;, &#39;Finnish&#39;),
 (&#39;fr&#39;, &#39;French&#39;),
 (&#39;fy&#39;, &#39;Frisian&#39;),
 (&#39;ga&#39;, &#39;Irish&#39;),
 (&#39;gd&#39;, &#39;Scottish Gaelic&#39;),
 (&#39;gl&#39;, &#39;Galician&#39;),
 (&#39;he&#39;, &#39;Hebrew&#39;),
 (&#39;hi&#39;, &#39;Hindi&#39;),
 (&#39;hr&#39;, &#39;Croatian&#39;),
 (&#39;hsb&#39;, &#39;Upper Sorbian&#39;),
 (&#39;hu&#39;, &#39;Hungarian&#39;),
 (&#39;ia&#39;, &#39;Interlingua&#39;),
 (&#39;id&#39;, &#39;Indonesian&#39;),
 (&#39;io&#39;, &#39;Ido&#39;),
 (&#39;is&#39;, &#39;Icelandic&#39;),
 (&#39;it&#39;, &#39;Italian&#39;),
 (&#39;ja&#39;, &#39;Japanese&#39;),
 (&#39;ka&#39;, &#39;Georgian&#39;),
 (&#39;kab&#39;, &#39;Kabyle&#39;),
 (&#39;kk&#39;, &#39;Kazakh&#39;),
 (&#39;km&#39;, &#39;Khmer&#39;),
 (&#39;kn&#39;, &#39;Kannada&#39;),
 (&#39;ko&#39;, &#39;Korean&#39;),
 (&#39;lb&#39;, &#39;Luxembourgish&#39;),
 (&#39;lt&#39;, &#39;Lithuanian&#39;),
 (&#39;lv&#39;, &#39;Latvian&#39;),
 (&#39;mk&#39;, &#39;Macedonian&#39;),
 (&#39;ml&#39;, &#39;Malayalam&#39;),
 (&#39;mn&#39;, &#39;Mongolian&#39;),
 (&#39;mr&#39;, &#39;Marathi&#39;),
 (&#39;my&#39;, &#39;Burmese&#39;),
 (&#39;nb&#39;, &#39;Norwegian Bokmål&#39;),
 (&#39;ne&#39;, &#39;Nepali&#39;),
 (&#39;nl&#39;, &#39;Dutch&#39;),
 (&#39;nn&#39;, &#39;Norwegian Nynorsk&#39;),
 (&#39;os&#39;, &#39;Ossetic&#39;),
 (&#39;pa&#39;, &#39;Punjabi&#39;),
 (&#39;pl&#39;, &#39;Polish&#39;),
 (&#39;pt&#39;, &#39;Portuguese&#39;),
 (&#39;pt-br&#39;, &#39;Brazilian Portuguese&#39;),
 (&#39;ro&#39;, &#39;Romanian&#39;),
 (&#39;ru&#39;, &#39;Russian&#39;),
 (&#39;sk&#39;, &#39;Slovak&#39;),
 (&#39;sl&#39;, &#39;Slovenian&#39;),
 (&#39;sq&#39;, &#39;Albanian&#39;),
 (&#39;sr&#39;, &#39;Serbian&#39;),
 (&#39;sr-latn&#39;, &#39;Serbian Latin&#39;),
 (&#39;sv&#39;, &#39;Swedish&#39;),
 (&#39;sw&#39;, &#39;Swahili&#39;),
 (&#39;ta&#39;, &#39;Tamil&#39;),
 (&#39;te&#39;, &#39;Telugu&#39;),
 (&#39;th&#39;, &#39;Thai&#39;),
 (&#39;tr&#39;, &#39;Turkish&#39;),
 (&#39;tt&#39;, &#39;Tatar&#39;),
 (&#39;udm&#39;, &#39;Udmurt&#39;),
 (&#39;uk&#39;, &#39;Ukrainian&#39;),
 (&#39;ur&#39;, &#39;Urdu&#39;),
 (&#39;vi&#39;, &#39;Vietnamese&#39;),
 (&#39;zh-hans&#39;, &#39;Simplified Chinese&#39;),
 (&#39;zh-hant&#39;, &#39;Traditional Chinese&#39;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#39;pl-pl&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#39;django_language&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#39;logging.config.dictConfig&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>Error in formatting: NoReverseMatch: Reverse for &#39;transfer&#39; not found. &#39;transfer&#39; is not a valid view function or pattern name.</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#39;/accounts/login/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#39;F j&#39;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#39;banking.urls&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_BROWSER_XSS_FILTER</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#39;root@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#39;sessionid&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#39;Lax&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#39;django.contrib.sessions.serializers.JSONSerializer&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#39;banking.settings&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>(&#39;/home/parallels/.local/share/Trash/files/Banking/static&#39;, &#39;/static/&#39;)</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,
 &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#39;/static/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#39;APP_DIRS&#39;: True,
  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,
  &#39;DIRS&#39;: [],
  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.template.context_processors.debug&#39;,
                                     &#39;django.template.context_processors.request&#39;,
                                     &#39;django.contrib.auth.context_processors.auth&#39;,
                                     &#39;django.contrib.messages.context_processors.messages&#39;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#39;,&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#39;P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#39;Europe/Warsaw&#39;</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#39;banking.wsgi.application&#39;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#39;SAMEORIGIN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#39;F Y&#39;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You're seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>
